- name: Install required dependencies
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - ca-certificates
    - curl
    - gnupg

- name: Create APT keyring directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key
  shell: >
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg
  args:
    executable: /bin/bash
  register: gpg_result

- name: Set permissions on Docker GPG key
  command: chmod a+r /etc/apt/keyrings/docker.gpg
  when: gpg_result.rc == 0

- name: Add Docker repository
  shell: >
    echo "deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" |
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

- name: Update APT cache
  apt:
    update_cache: yes

- name: Install containerd
  apt:
    name: containerd.io
    state: present

- name: Ensure /etc/modules-load.d/containerd.conf exists
  file:
    path: /etc/modules-load.d/containerd.conf
    state: touch

- name: Add required kernel modules to containerd.conf
  lineinfile:
    path: /etc/modules-load.d/containerd.conf
    line: "{{ item }}"
  with_items:
    - overlay
    - br_netfilter
  notify: load containerd modules

- name: Load kernel modules
  command: modprobe {{ item }}
  with_items:
    - overlay
    - br_netfilter

- name: Generate containerd default configuration
  shell: containerd config default > /etc/containerd/config.toml
  args:
    executable: /bin/sh

- name: Set systemd cgroup driver in containerd configuration
  replace:
    path: /etc/containerd/config.toml
    regexp: ' SystemdCgroup = false'
    replace: ' SystemdCgroup = true'

- name: Restart containerd service
  systemd:
    name: containerd.service
    state: restarted
    